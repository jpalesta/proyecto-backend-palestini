<div>
    <h1>Opciones de administrador</h1>

        <div class="fw-bolder">{{optmessage}}</div>

    <h3>Listado de usuarios</h3>
    <button
        type='button'
        class='btn btn-danger'
        id="deleteInactiveUsersButton"
    >Eliminar usuarios Inactivos</button>
    <button
        type='button'
        class='btn btn-primary'
        onclick="window.location.href='/api/session/logout/'"
    >Logout</button>
</div>
<div class='container'>
    <div class='row'>
        {{#each users}}
            <div class='col'>
                <div class='card' style='width: 15rem;'>
                    <img
                        src='https://th.bing.com/th/id/OIP.adnojoR19AsKm8Zz7M5R9AHaHa?pid=ImgDet&rs=1'
                        class='card-img-top'
                        alt='Imagen de perfil'
                    />
                    <div class='card-body'>
                        <h6 class='card-title'>{{this.firstName}}</h6>
                        <p class='card-text'>{{this.lastName}}</p>
                        <p class='card-text'>Role: {{this.role}}</p>
                        <p class='card-text'>Age: {{this.age}}</p>
                        <p class='card-text'>Email: {{this.email}}</p>
                        <p class='card-text'>Last Connection:
                            {{this.lastConnection}}</p>
                    </div>
                    <div class='card-body'>
                        <button
                            type='button'
                            class='btn btn-primary modify-role-btn'
                            data-uid='{{this.id}}'
                        >Modificar Rol</button>
                        <button
                            type='button'
                            class='btn btn-primary delete-user-btn'
                            data-uid='{{this.id}}'
                        >Eliminar</button>
                    </div>
                </div>
            </div>
        {{/each}}
    </div>
</div>

<script
    src='https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js'
    integrity='sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM'
    crossorigin='anonymous'
></script>

<script src='https://cdn.jsdelivr.net/npm/sweetalert2@11'></script>

<script>
    window.addEventListener('load', () => { 
      const deleteUserButtons = document.querySelectorAll('.delete-user-btn');
      deleteUserButtons.forEach(button => { 
        button.addEventListener('click', async () => { 
          try {
              const currentLocationOrigin = window.location.origin
              const uid = button.getAttribute('data-uid'); 
              const url =`${currentLocationOrigin}/api/users/${uid}` 
              const response = await fetch(url, { method: 'DELETE' }) 
              if (response.ok) { 
                Swal.fire({ 
                  icon:'success', 
                  title: 'Usuario eliminado con éxito',
                  text: responseData.message,
                  timer: 2000, 
                  showConfirmButton: false }) 
                  setTimeout(() => {
              window.location.href ='/usersmaintenance/'
            }, 2000);
              } else {
                const responseData = await response.json(); 
                Swal.fire({ 
                  icon: 'error', 
                  title: 'Error', 
                  text: responseData.message, }) 
                } } 
          catch (error) { 
            logger.error(error); 
            } 
        }); 
      }); 
    });
</script>

<script>
    window.addEventListener('load', () => { 
      const modifyRoleUserButtons = document.querySelectorAll('.modify-role-btn');
      modifyRoleUserButtons.forEach(button => { 
        button.addEventListener('click', async () => { 
          try {
              const currentLocationOrigin = window.location.origin
              const uid = button.getAttribute('data-uid'); 
              const url =`${currentLocationOrigin}/api/users/premium/${uid}` 
              const response = await fetch(url, { method: 'POST' }) 
              if (response.ok) { 
                const responseData = await response.json(); 
                Swal.fire({ 
                  icon:'success', 
                  title: 'Usuario modificado con éxito',
                  text: responseData.message,
                  timer: 2000, 
                  showConfirmButton: false }) 
                  setTimeout(() => {
              window.location.href ='/usersmaintenance/'
            }, 2000);
              } else {
                const responseData = await response.json(); 
                Swal.fire({ 
                  icon: 'error', 
                  title: 'Error', 
                  text: responseData.message, }) 
                } } 
          catch (error) { 
            logger.error('Error en la solicitud:', error); 
            } 
        }); 
      }); 
    });
</script>

<script>
    window.addEventListener('load', () => { 
      const deleteInactiveUsersButton = document.getElementById('deleteInactiveUsersButton');
        deleteInactiveUsersButton.addEventListener('click', async () => { 
          try {
              const currentLocationOrigin = window.location.origin
              const url =`${currentLocationOrigin}/api/users/` 
              const response = await fetch(url, { method: 'DELETE' }) 
              if (response.status === 201){
                                Swal.fire({ 
                  icon:'warning', 
                  title: 'No se encontraron usuarios inactivos para eliminar',
                  timer: 2000, 
                  showConfirmButton: false }) 
                  setTimeout(() => {
              window.location.href ='/usersmaintenance/'
            }, 2000);
              }
              if (response.status === 200){
                const responseData = await response.json()
                if (responseData.body.length === 1) {
                Swal.fire({ 
                  icon:'success', 
                  title: `El usuario ${responseData.body} fue eliminado con éxito`,
                  timer: 2000, 
                  showConfirmButton: false }) 
                  setTimeout(() => {
              window.location.href ='/usersmaintenance/'
            }, 2000);
              } else {
                 Swal.fire({ 
                  icon:'success', 
                  title: `Los usuarios \n${responseData.body.join('\n')} fueron eliminados con éxito`,
                  timer: 2000, 
                  showConfirmButton: false }) 
                  setTimeout(() => {
              window.location.href ='/usersmaintenance/'
            }, 2000);
              }
              }
          } catch (error) { 
            logger.error('Error en la solicitud:', error); 
            } 
        }); 
      }); 
</script>