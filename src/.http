//PRODUCTS


### GET de productos con pagintate y querys check ok
GET http://localhost:8080/api/products/?page=1&limit=5

### GET de productos por ID check ok
GET  http://localhost:8080/api/products/64627fdaf01a831a08937d4f

### POST crea un producto a partir de un body, chequeado con validación OK
POST  http://localhost:8080/api/products
Content-Type: application/json

{
"title": "Título Producto Modelo 15" ,
"description": "Descripción Producto Modelo 15"  ,
"price": 15000 ,
"thumbnail": "" ,
"code": "A18",
"stock": 0,
"category": "Categoría Modelo",
"status": true
}
### PUT Modifica un producto por body chequeado OK (falta validación de body)
put http://localhost:8080/api/products/645fdc7b30fab603d13ba3f6
Content-Type: application/json

{
    "stock": 3
}

### DELETE borra un producto por ID chequeado OK
delete http://localhost:8080/api/products/6467db9c27cc042809b09f44



//CARTS

### GET PURCHASE - le puse que traiga el cart con populate
POST   http://localhost:8080/api/carts/64a2d7c22ef2e02555bf480c/purchase

### GET trae todos los carritos check ok
GET http://localhost:8080/api/carts/

### GET trae el carrito por ID con Populate por Id de producto check ok
GET  http://localhost:8080/api/carts/6464bf41a2da8e243014ebc5

### POST crea un carrito con producto pasados por body check ok con validación
POST  http://localhost:8080/api/carts/
Content-Type: application/json

{ 
"products": [
        {
            "product": "645fdc7b30fab603d13ba3f6",
            "quantity": 2
        },
        {
            "product": "64627f45f01a831a08937d2f",
            "quantity": 1000
        },
        {
            "product": "64627faaf01a831a08937d43",
            "quantity": 30001
        },
        {
            "product": "649b5c8ec0f35ad725e2cef2",
            "quantity": 10
        }
    ]
}

### POST Agrega o incrementa un producto en un carrito, ambos pasan por params check ok
post http://localhost:8080/api/carts/64622c96f3e73d823d6ddb4b/products/64627fdaf01a831a08937d4f

### DELETE Vacía un carrito por id check ok
delete http://localhost:8080/api/carts/64622c96f3e73d823d6ddd

### DELETE borra un producto de un carrito por id de carrito e id de producto check ok
delete http://localhost:8080/api/carts/6462272ed9cf3a62517025bf/products/645fdc8a30fab603d13ba3f9

### PUT actualiza un carrito por id con un producto por body check ok, falta validación del body
put http://localhost:8080/api/carts/6464bf41a2da8e243014ebc5
Content-Type: application/json

{
    "products":         [{
            "product": "645fdc8a30fab603d13ba3f9",
            "quantity": 1
        },
        {
            "product": "645fdc7b30fab603d13ba3f6",
            "quantity": 8
        },
        {
            "product": "64627f50f01a831a08937d33",
            "quantity": 25
        }]
}
### PUT actualiza la cantidad de un producto de un carrito por id con cantidad por body check ok falta validar body
put http://localhost:8080/api/carts/6462272ed9cf3a62517025bf/products/645fdc7b30fab603d13ba3f6
Content-Type: application/json

{
        "quantity": 18
}

### GET PRUEBA CURRENT
get http://localhost:8080/api/session/current

### LOGIN USER
post http://localhost:8080/api/session/login
Content-Type: application/json

{
        "email": "jose.palestini@gmail.com",
        "password": "123456"
}
### LOGIN ADIMIN
post http://localhost:8080/api/session/login
Content-Type: application/json

{
        "email": "adminCoder@coder.com",
        "password": "123456"
}

### GET PRUEBA logout
post http://localhost:8080/api/session/logout



###USERS
###GET todos los usuarios
get http://localhost:8080/api/users/

###POST Crea un usuario
post http://localhost:8080/api/users/
Content-Type: application/json

{
        "firstName": "prueba desde REST",
        "lastName": "prueba desde REST",
        "email": "prueba@desderest.com",
        "password": "123456"
}
